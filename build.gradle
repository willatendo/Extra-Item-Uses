plugins {
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://api.modrinth.com/maven/" }
        maven { url "https://maven.blamejared.com/" }
        maven { url "https://modmaven.dev/" }
        maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
        maven { url "https://mvn.devos.one/snapshots/" }
        maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }
        maven { url "https://raw.githubusercontent.com/willatendo/Simple-Library/main/builds/" }
        maven { url "https://raw.githubusercontent.com/willatendo/Fossils-And-Archaeology-Legacy/main/builds/" }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }

    processResources {
        def expandProps = [
                "version"                : version,
                "group"                  : project.group,
                "minecraft_version"      : minecraft_version,
                "forge_version"          : forge_version,
                "forge_version_range"    : forge_version_range,
                "forge_version_range"    : forge_version_range,
                "minecraft_version_range": minecraft_version_range,
                "api_version"            : api_version,
                "fabric_version"         : fabric_version,
                "mod_name"               : mod_name,
                "homepage"               : homepage,
                "issue_tracker"          : issue_tracker,
                "mod_author"             : mod_author,
                "mod_id"                 : mod_id,
                "icon"                   : icon,
                "license"                : license,
                "description"            : project.description,
                "neoforge_version"       : neoforge_version,
                "neoforge_version_range" : neoforge_version_range,]

        filesMatching(['fabric.mod.json', 'META-INF/mods.toml']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}
